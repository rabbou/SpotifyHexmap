math7 = math[which(math$Test.Name == 'Mathematics Grade 7'),]
math8 = math[which(math$Test.Name == 'Mathematics Grade 8'),]
math = math[which(math$Test.Name == 'Combined Math Grades 3-8'),]
data = merge(demo2, sped, by='School.ID')
data = within(data, rm(School.Name.y,School.Name.x,Network.y))
data3 = merge(data, ela3, by='School.ID')
data3 = merge(data3, math3, by='School.ID')
data4 = merge(data, ela4, by='School.ID')
data4 = merge(data4, math4, by='School.ID')
data5 = merge(data, ela5, by='School.ID')
data5 = merge(data5, math5, by='School.ID')
data6 = merge(data, ela6, by='School.ID')
data6 = merge(data6, math6, by='School.ID')
data7 = merge(data, ela7, by='School.ID')
data7 = merge(data7, math7, by='School.ID')
data8 = merge(data, math8, by='School.ID')
data8 = merge(data8, ela8, by='School.ID')
data = merge(data, ela, by='School.ID')
data = merge(data, math, by='School.ID')
data3 = within(data3, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data4 = within(data4, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data5 = within(data5, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data6 = within(data6, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data7 = within(data7, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data8 = within(data8, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = within(data, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = data[which(grepl('Network', data$Network) | data$Network == 'Charter'),]
data3 = data3[which(grepl('Network', data3$Network) | data3$Network == 'Charter'),]
data4 = data4[which(grepl('Network', data4$Network) | data4$Network == 'Charter'),]
data5 = data5[which(grepl('Network', data5$Network) | data5$Network == 'Charter'),]
data6 = data6[which(grepl('Network', data6$Network) | data6$Network == 'Charter'),]
data7 = data7[which(grepl('Network', data7$Network) | data7$Network == 'Charter'),]
data8 = data8[which(grepl('Network', data8$Network) | data8$Network == 'Charter'),]
data$aapct = as.numeric(as.character(data$aapct))
data$hpct = as.numeric(as.character(data$hpct))
data$wpct = as.numeric(as.character(data$wpct))
data$Total = as.numeric(as.numeric(gsub(",", "", data$Total)))
data$ELA_metOrExc = as.numeric(as.character(data$ELA_metOrExc)) * 100
data$frLunchPct = as.numeric(as.character(data$frLunchPct)) * 100
data$mathMetOrExc = as.numeric(as.character(data$mathMetOrExc)) * 100
data$bilingualPct = as.numeric(as.character(data$bilingualPct)) * 100
data$props = data$hpct + data$aapct
data$dummy = ifelse(data$Network == 'Charter', 1, 0)
data3$aapct = as.numeric(as.character(data3$aapct))
data3$hpct = as.numeric(as.character(data3$hpct))
data3$wpct = as.numeric(as.character(data3$wpct))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data3$ELA_metOrExc = as.numeric(as.character(data3$ELA_metOrExc)) * 100
data3$mathMetOrExc = as.numeric(as.character(data3$mathMetOrExc)) * 100
data3$props = data3$hpct + data3$aapct
data3$dummy = ifelse(data3$Network == 'Charter', 1, 0)
data8$aapct = as.numeric(as.character(data8$aapct))
data8$hpct = as.numeric(as.character(data8$hpct))
data8$wpct = as.numeric(as.character(data8$wpct))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data8$ELA_metOrExc = as.numeric(as.character(data8$ELA_metOrExc)) * 100
data8$mathMetOrExc = as.numeric(as.character(data8$mathMetOrExc)) * 100
data8$props = data8$hpct + data8$aapct
data8$dummy = ifelse(data8$Network == 'Charter', 1, 0)
charter = data[which(data$Network == 'Charter'),]
neigh = data[which(data$Network != 'Charter'),]
charter3 = data3[which(data3$Network == 'Charter'),]
neigh3 = data3[which(data3$Network != 'Charter'),]
charter8 = data8[which(data8$Network == 'Charter'),]
neigh8 = data8[which(data8$Network != 'Charter'),]
sum(charter$Total)
sum(charter3$Total)
sum(charter8$Total)
sum(neigh$Total)
sum(neigh3$Total)
sum(neigh8$Total)
data8$aapct = as.numeric(as.character(data8$aapct))
library(foreign)
library(dplyr)
library(tidyr)
library(stargazer)
library(ggplot2)
library(reshape)
demo2 = read.csv('2017 demographics2.csv', header = T)
ela = read.csv('ELA assessment.csv', header = T)
ela = ela[which(ela$Year == 2017),]
ela3 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 3'),]
ela4 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 4'),]
ela5 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 5'),]
ela6 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 6'),]
ela7 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 7'),]
ela8 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 8'),]
ela = ela[which(ela$Test.Name == 'Combined ELA Grades 3-8'),]
sped = read.csv('lepsped.csv', header = T)
math = read.csv('math assessment.csv', header = T)
math = math[which(math$Year == 2017),]
math3 = math[which(math$Test.Name == 'Mathematics Grade 3'),]
math4 = math[which(math$Test.Name == 'Mathematics Grade 4'),]
math5 = math[which(math$Test.Name == 'Mathematics Grade 5'),]
math6 = math[which(math$Test.Name == 'Mathematics Grade 6'),]
math7 = math[which(math$Test.Name == 'Mathematics Grade 7'),]
math8 = math[which(math$Test.Name == 'Mathematics Grade 8'),]
math = math[which(math$Test.Name == 'Combined Math Grades 3-8'),]
data = merge(demo2, sped, by='School.ID')
data = within(data, rm(School.Name.y,School.Name.x,Network.y))
data3 = merge(data, ela3, by='School.ID')
data3 = merge(data3, math3, by='School.ID')
data4 = merge(data, ela4, by='School.ID')
data4 = merge(data4, math4, by='School.ID')
data5 = merge(data, ela5, by='School.ID')
data5 = merge(data5, math5, by='School.ID')
data6 = merge(data, ela6, by='School.ID')
data6 = merge(data6, math6, by='School.ID')
data7 = merge(data, ela7, by='School.ID')
data7 = merge(data7, math7, by='School.ID')
data8 = merge(data, math8, by='School.ID')
data8 = merge(data8, ela8, by='School.ID')
data = merge(data, ela, by='School.ID')
data = merge(data, math, by='School.ID')
data3 = within(data3, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data4 = within(data4, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data5 = within(data5, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data6 = within(data6, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data7 = within(data7, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data8 = within(data8, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = within(data, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = data[which(grepl('Network', data$Network) | data$Network == 'Charter'),]
data3 = data3[which(grepl('Network', data3$Network) | data3$Network == 'Charter'),]
data4 = data4[which(grepl('Network', data4$Network) | data4$Network == 'Charter'),]
data5 = data5[which(grepl('Network', data5$Network) | data5$Network == 'Charter'),]
data6 = data6[which(grepl('Network', data6$Network) | data6$Network == 'Charter'),]
data7 = data7[which(grepl('Network', data7$Network) | data7$Network == 'Charter'),]
data8 = data8[which(grepl('Network', data8$Network) | data8$Network == 'Charter'),]
data$aapct = as.numeric(as.character(data$aapct))
data$hpct = as.numeric(as.character(data$hpct))
data$wpct = as.numeric(as.character(data$wpct))
data$Total = as.numeric(as.numeric(gsub(",", "", data$Total)))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data4$Total = as.numeric(as.numeric(gsub(",", "", data4$Total)))
data5$Total = as.numeric(as.numeric(gsub(",", "", data5$Total)))
data6$Total = as.numeric(as.numeric(gsub(",", "", data6$Total)))
data7$Total = as.numeric(as.numeric(gsub(",", "", data7$Total)))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data$ELA_metOrExc = as.numeric(as.character(data$ELA_metOrExc)) * 100
data$frLunchPct = as.numeric(as.character(data$frLunchPct)) * 100
data$mathMetOrExc = as.numeric(as.character(data$mathMetOrExc)) * 100
data$bilingualPct = as.numeric(as.character(data$bilingualPct)) * 100
data$props = data$hpct + data$aapct
data$dummy = ifelse(data$Network == 'Charter', 1, 0)
data3$aapct = as.numeric(as.character(data3$aapct))
data3$hpct = as.numeric(as.character(data3$hpct))
data3$wpct = as.numeric(as.character(data3$wpct))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data3$ELA_metOrExc = as.numeric(as.character(data3$ELA_metOrExc)) * 100
data3$mathMetOrExc = as.numeric(as.character(data3$mathMetOrExc)) * 100
data3$props = data3$hpct + data3$aapct
data3$dummy = ifelse(data3$Network == 'Charter', 1, 0)
data4$aapct = as.numeric(as.character(data4$aapct))
data4$hpct = as.numeric(as.character(data4$hpct))
data4$wpct = as.numeric(as.character(data4$wpct))
data4$Total = as.numeric(as.numeric(gsub(",", "", data4$Total)))
data4$ELA_metOrExc = as.numeric(as.character(data4$ELA_metOrExc)) * 100
data4$mathMetOrExc = as.numeric(as.character(data4$mathMetOrExc)) * 100
data4$props = data4$hpct + data4$aapct
data4$dummy = ifelse(data4$Network == 'Charter', 1, 0)
data5$aapct = as.numeric(as.character(data5$aapct))
data5$hpct = as.numeric(as.character(data5$hpct))
data5$wpct = as.numeric(as.character(data5$wpct))
data5$Total = as.numeric(as.numeric(gsub(",", "", data5$Total)))
data5$ELA_metOrExc = as.numeric(as.character(data5$ELA_metOrExc)) * 100
data5$mathMetOrExc = as.numeric(as.character(data5$mathMetOrExc)) * 100
data5$props = data5$hpct + data5$aapct
data5$dummy = ifelse(data5$Network == 'Charter', 1, 0)
data6$aapct = as.numeric(as.character(data6$aapct))
data6$hpct = as.numeric(as.character(data6$hpct))
data6$wpct = as.numeric(as.character(data6$wpct))
data6$Total = as.numeric(as.numeric(gsub(",", "", data6$Total)))
data6$ELA_metOrExc = as.numeric(as.character(data6$ELA_metOrExc)) * 100
data6$mathMetOrExc = as.numeric(as.character(data6$mathMetOrExc)) * 100
data6$props = data6$hpct + data6$aapct
data6$dummy = ifelse(data6$Network == 'Charter', 1, 0)
data7$aapct = as.numeric(as.character(data7$aapct))
data7$hpct = as.numeric(as.character(data7$hpct))
data7$wpct = as.numeric(as.character(data7$wpct))
data7$Total = as.numeric(as.numeric(gsub(",", "", data7$Total)))
data7$ELA_metOrExc = as.numeric(as.character(data7$ELA_metOrExc)) * 100
data7$mathMetOrExc = as.numeric(as.character(data7$mathMetOrExc)) * 100
data7$props = data7$hpct + data7$aapct
data7$dummy = ifelse(data7$Network == 'Charter', 1, 0)
data8$aapct = as.numeric(as.character(data8$aapct))
data8$hpct = as.numeric(as.character(data8$hpct))
data8$wpct = as.numeric(as.character(data8$wpct))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data8$ELA_metOrExc = as.numeric(as.character(data8$ELA_metOrExc)) * 100
data8$mathMetOrExc = as.numeric(as.character(data8$mathMetOrExc)) * 100
data8$props = data8$hpct + data8$aapct
data8$dummy = ifelse(data8$Network == 'Charter', 1, 0)
charter = data[which(data$Network == 'Charter'),]
neigh = data[which(data$Network != 'Charter'),]
charter3 = data3[which(data3$Network == 'Charter'),]
neigh3 = data3[which(data3$Network != 'Charter'),]
charter4 = data4[which(data4$Network == 'Charter'),]
neigh4 = data4[which(data4$Network != 'Charter'),]
charter5 = data5[which(data5$Network == 'Charter'),]
neigh5 = data5[which(data5$Network != 'Charter'),]
charter6 = data6[which(data6$Network == 'Charter'),]
neigh6 = data6[which(data6$Network != 'Charter'),]
charter7 = data7[which(data7$Network == 'Charter'),]
neigh7 = data7[which(data7$Network != 'Charter'),]
charter8 = data8[which(data8$Network == 'Charter'),]
neigh8 = data8[which(data8$Network != 'Charter'),]
sum(charter$Total)
sum(charter3$Total)
sum(charter8$Total)
sum(neigh$Total)
sum(neigh3$Total)
sum(neigh8$Total)
charter$test = (charter$mathMetOrExc+charter$ELA_metOrExc)/2
data$test = (data$mathMetOrExc+data$ELA_metOrExc)/2
mean(charter[which(charter$props >= 80%),]$test)
charter[which(charter$props >= 80%),]
demo2 = read.csv('2017 demographics2.csv', header = T)
ela = read.csv('ELA assessment.csv', header = T)
ela = ela[which(ela$Year == 2017),]
ela3 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 3'),]
ela4 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 4'),]
ela5 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 5'),]
ela6 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 6'),]
ela7 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 7'),]
ela8 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 8'),]
ela = ela[which(ela$Test.Name == 'Combined ELA Grades 3-8'),]
sped = read.csv('lepsped.csv', header = T)
math = read.csv('math assessment.csv', header = T)
math = math[which(math$Year == 2017),]
math3 = math[which(math$Test.Name == 'Mathematics Grade 3'),]
math4 = math[which(math$Test.Name == 'Mathematics Grade 4'),]
math5 = math[which(math$Test.Name == 'Mathematics Grade 5'),]
math6 = math[which(math$Test.Name == 'Mathematics Grade 6'),]
math7 = math[which(math$Test.Name == 'Mathematics Grade 7'),]
math8 = math[which(math$Test.Name == 'Mathematics Grade 8'),]
math = math[which(math$Test.Name == 'Combined Math Grades 3-8'),]
data = merge(demo2, sped, by='School.ID')
data = within(data, rm(School.Name.y,School.Name.x,Network.y))
data3 = merge(data, ela3, by='School.ID')
data3 = merge(data3, math3, by='School.ID')
data4 = merge(data, ela4, by='School.ID')
data4 = merge(data4, math4, by='School.ID')
data5 = merge(data, ela5, by='School.ID')
data5 = merge(data5, math5, by='School.ID')
data6 = merge(data, ela6, by='School.ID')
data6 = merge(data6, math6, by='School.ID')
data7 = merge(data, ela7, by='School.ID')
data7 = merge(data7, math7, by='School.ID')
data8 = merge(data, math8, by='School.ID')
data8 = merge(data8, ela8, by='School.ID')
data = merge(data, ela, by='School.ID')
data = merge(data, math, by='School.ID')
data3 = within(data3, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data4 = within(data4, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data5 = within(data5, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data6 = within(data6, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data7 = within(data7, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data8 = within(data8, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = within(data, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = data[which(grepl('Network', data$Network) | data$Network == 'Charter'),]
data3 = data3[which(grepl('Network', data3$Network) | data3$Network == 'Charter'),]
data4 = data4[which(grepl('Network', data4$Network) | data4$Network == 'Charter'),]
data5 = data5[which(grepl('Network', data5$Network) | data5$Network == 'Charter'),]
data6 = data6[which(grepl('Network', data6$Network) | data6$Network == 'Charter'),]
data7 = data7[which(grepl('Network', data7$Network) | data7$Network == 'Charter'),]
data8 = data8[which(grepl('Network', data8$Network) | data8$Network == 'Charter'),]
data$aapct = as.numeric(as.character(data$aapct))
data$hpct = as.numeric(as.character(data$hpct))
data$wpct = as.numeric(as.character(data$wpct))
data$Total = as.numeric(as.numeric(gsub(",", "", data$Total)))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data4$Total = as.numeric(as.numeric(gsub(",", "", data4$Total)))
data5$Total = as.numeric(as.numeric(gsub(",", "", data5$Total)))
data6$Total = as.numeric(as.numeric(gsub(",", "", data6$Total)))
data7$Total = as.numeric(as.numeric(gsub(",", "", data7$Total)))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data$ELA_metOrExc = as.numeric(as.character(data$ELA_metOrExc)) * 100
data$frLunchPct = as.numeric(as.character(data$frLunchPct)) * 100
data$mathMetOrExc = as.numeric(as.character(data$mathMetOrExc)) * 100
data$bilingualPct = as.numeric(as.character(data$bilingualPct)) * 100
data$props = data$hpct + data$aapct
data$dummy = ifelse(data$Network == 'Charter', 1, 0)
data3$aapct = as.numeric(as.character(data3$aapct))
data3$hpct = as.numeric(as.character(data3$hpct))
data3$wpct = as.numeric(as.character(data3$wpct))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data3$ELA_metOrExc = as.numeric(as.character(data3$ELA_metOrExc)) * 100
data3$mathMetOrExc = as.numeric(as.character(data3$mathMetOrExc)) * 100
data3$props = data3$hpct + data3$aapct
data3$dummy = ifelse(data3$Network == 'Charter', 1, 0)
data4$aapct = as.numeric(as.character(data4$aapct))
data4$hpct = as.numeric(as.character(data4$hpct))
data4$wpct = as.numeric(as.character(data4$wpct))
data4$Total = as.numeric(as.numeric(gsub(",", "", data4$Total)))
data4$ELA_metOrExc = as.numeric(as.character(data4$ELA_metOrExc)) * 100
data4$mathMetOrExc = as.numeric(as.character(data4$mathMetOrExc)) * 100
data4$props = data4$hpct + data4$aapct
data4$dummy = ifelse(data4$Network == 'Charter', 1, 0)
data5$aapct = as.numeric(as.character(data5$aapct))
data5$hpct = as.numeric(as.character(data5$hpct))
data5$wpct = as.numeric(as.character(data5$wpct))
data5$Total = as.numeric(as.numeric(gsub(",", "", data5$Total)))
data5$ELA_metOrExc = as.numeric(as.character(data5$ELA_metOrExc)) * 100
data5$mathMetOrExc = as.numeric(as.character(data5$mathMetOrExc)) * 100
data5$props = data5$hpct + data5$aapct
data5$dummy = ifelse(data5$Network == 'Charter', 1, 0)
data6$aapct = as.numeric(as.character(data6$aapct))
data6$hpct = as.numeric(as.character(data6$hpct))
data6$wpct = as.numeric(as.character(data6$wpct))
data6$Total = as.numeric(as.numeric(gsub(",", "", data6$Total)))
data6$ELA_metOrExc = as.numeric(as.character(data6$ELA_metOrExc)) * 100
data6$mathMetOrExc = as.numeric(as.character(data6$mathMetOrExc)) * 100
data6$props = data6$hpct + data6$aapct
data6$dummy = ifelse(data6$Network == 'Charter', 1, 0)
data7$aapct = as.numeric(as.character(data7$aapct))
data7$hpct = as.numeric(as.character(data7$hpct))
data7$wpct = as.numeric(as.character(data7$wpct))
data7$Total = as.numeric(as.numeric(gsub(",", "", data7$Total)))
data7$ELA_metOrExc = as.numeric(as.character(data7$ELA_metOrExc)) * 100
data7$mathMetOrExc = as.numeric(as.character(data7$mathMetOrExc)) * 100
data7$props = data7$hpct + data7$aapct
data7$dummy = ifelse(data7$Network == 'Charter', 1, 0)
data8$aapct = as.numeric(as.character(data8$aapct))
data8$hpct = as.numeric(as.character(data8$hpct))
data8$wpct = as.numeric(as.character(data8$wpct))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data8$ELA_metOrExc = as.numeric(as.character(data8$ELA_metOrExc)) * 100
data8$mathMetOrExc = as.numeric(as.character(data8$mathMetOrExc)) * 100
data8$props = data8$hpct + data8$aapct
data8$dummy = ifelse(data8$Network == 'Charter', 1, 0)
data$test = (data$mathMetOrExc+data$ELA_metOrExc)/2
charter = data[which(data$Network == 'Charter'),]
neigh = data[which(data$Network != 'Charter'),]
charter3 = data3[which(data3$Network == 'Charter'),]
neigh3 = data3[which(data3$Network != 'Charter'),]
charter4 = data4[which(data4$Network == 'Charter'),]
neigh4 = data4[which(data4$Network != 'Charter'),]
charter5 = data5[which(data5$Network == 'Charter'),]
neigh5 = data5[which(data5$Network != 'Charter'),]
charter6 = data6[which(data6$Network == 'Charter'),]
neigh6 = data6[which(data6$Network != 'Charter'),]
charter7 = data7[which(data7$Network == 'Charter'),]
neigh7 = data7[which(data7$Network != 'Charter'),]
charter8 = data8[which(data8$Network == 'Charter'),]
neigh8 = data8[which(data8$Network != 'Charter'),]
mean(charter[which(charter$props >= 80%),]$test)
charter[which(charter$props >= 80%),]
sum(charter$Total)
mean(charter[which(charter$props >= 80),]$test)
mean(charter[which(charter$props >= 80),]$test)
mean(charter[which(charter$props >= 80),]$test)
mean(charter3[which(charter3$props >= 80),]$test)
mean(charter4[which(charter4$props >= 80),]$test)
mean(charter5[which(charter5$props >= 80),]$test)
mean(charter6[which(charter6$props >= 80),]$test)
mean(charter7[which(charter7$props >= 80),]$test)
mean(charter8[which(charter8$props >= 80),]$test)
demo2 = read.csv('2017 demographics2.csv', header = T)
ela = read.csv('ELA assessment.csv', header = T)
ela = ela[which(ela$Year == 2017),]
ela3 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 3'),]
ela4 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 4'),]
ela5 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 5'),]
ela6 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 6'),]
ela7 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 7'),]
ela8 = ela[which(ela$Test.Name == 'ELA/Literacy Grade 8'),]
ela = ela[which(ela$Test.Name == 'Combined ELA Grades 3-8'),]
sped = read.csv('lepsped.csv', header = T)
math = read.csv('math assessment.csv', header = T)
math = math[which(math$Year == 2017),]
math3 = math[which(math$Test.Name == 'Mathematics Grade 3'),]
math4 = math[which(math$Test.Name == 'Mathematics Grade 4'),]
math5 = math[which(math$Test.Name == 'Mathematics Grade 5'),]
math6 = math[which(math$Test.Name == 'Mathematics Grade 6'),]
math7 = math[which(math$Test.Name == 'Mathematics Grade 7'),]
math8 = math[which(math$Test.Name == 'Mathematics Grade 8'),]
math = math[which(math$Test.Name == 'Combined Math Grades 3-8'),]
data = merge(demo2, sped, by='School.ID')
data = within(data, rm(School.Name.y,School.Name.x,Network.y))
data3 = merge(data, ela3, by='School.ID')
data3 = merge(data3, math3, by='School.ID')
data4 = merge(data, ela4, by='School.ID')
data4 = merge(data4, math4, by='School.ID')
data5 = merge(data, ela5, by='School.ID')
data5 = merge(data5, math5, by='School.ID')
data6 = merge(data, ela6, by='School.ID')
data6 = merge(data6, math6, by='School.ID')
data7 = merge(data, ela7, by='School.ID')
data7 = merge(data7, math7, by='School.ID')
data8 = merge(data, math8, by='School.ID')
data8 = merge(data8, ela8, by='School.ID')
data = merge(data, ela, by='School.ID')
data = merge(data, math, by='School.ID')
data3 = within(data3, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data4 = within(data4, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data5 = within(data5, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data6 = within(data6, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data7 = within(data7, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data8 = within(data8, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = within(data, rm(School.Name.y,School.Name.x, Year.x, Test.Name.x, Year.y, Test.Name.y))
data = data[which(grepl('Network', data$Network) | data$Network == 'Charter'),]
data3 = data3[which(grepl('Network', data3$Network) | data3$Network == 'Charter'),]
data4 = data4[which(grepl('Network', data4$Network) | data4$Network == 'Charter'),]
data5 = data5[which(grepl('Network', data5$Network) | data5$Network == 'Charter'),]
data6 = data6[which(grepl('Network', data6$Network) | data6$Network == 'Charter'),]
data7 = data7[which(grepl('Network', data7$Network) | data7$Network == 'Charter'),]
data8 = data8[which(grepl('Network', data8$Network) | data8$Network == 'Charter'),]
data$aapct = as.numeric(as.character(data$aapct))
data$hpct = as.numeric(as.character(data$hpct))
data$wpct = as.numeric(as.character(data$wpct))
data$Total = as.numeric(as.numeric(gsub(",", "", data$Total)))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data4$Total = as.numeric(as.numeric(gsub(",", "", data4$Total)))
data5$Total = as.numeric(as.numeric(gsub(",", "", data5$Total)))
data6$Total = as.numeric(as.numeric(gsub(",", "", data6$Total)))
data7$Total = as.numeric(as.numeric(gsub(",", "", data7$Total)))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data$ELA_metOrExc = as.numeric(as.character(data$ELA_metOrExc)) * 100
data$frLunchPct = as.numeric(as.character(data$frLunchPct)) * 100
data$mathMetOrExc = as.numeric(as.character(data$mathMetOrExc)) * 100
data$bilingualPct = as.numeric(as.character(data$bilingualPct)) * 100
data$props = data$hpct + data$aapct
data$dummy = ifelse(data$Network == 'Charter', 1, 0)
data3$aapct = as.numeric(as.character(data3$aapct))
data3$hpct = as.numeric(as.character(data3$hpct))
data3$wpct = as.numeric(as.character(data3$wpct))
data3$Total = as.numeric(as.numeric(gsub(",", "", data3$Total)))
data3$ELA_metOrExc = as.numeric(as.character(data3$ELA_metOrExc)) * 100
data3$mathMetOrExc = as.numeric(as.character(data3$mathMetOrExc)) * 100
data3$props = data3$hpct + data3$aapct
data3$dummy = ifelse(data3$Network == 'Charter', 1, 0)
data4$aapct = as.numeric(as.character(data4$aapct))
data4$hpct = as.numeric(as.character(data4$hpct))
data4$wpct = as.numeric(as.character(data4$wpct))
data4$Total = as.numeric(as.numeric(gsub(",", "", data4$Total)))
data4$ELA_metOrExc = as.numeric(as.character(data4$ELA_metOrExc)) * 100
data4$mathMetOrExc = as.numeric(as.character(data4$mathMetOrExc)) * 100
data4$props = data4$hpct + data4$aapct
data4$dummy = ifelse(data4$Network == 'Charter', 1, 0)
data5$aapct = as.numeric(as.character(data5$aapct))
data5$hpct = as.numeric(as.character(data5$hpct))
data5$wpct = as.numeric(as.character(data5$wpct))
data5$Total = as.numeric(as.numeric(gsub(",", "", data5$Total)))
data5$ELA_metOrExc = as.numeric(as.character(data5$ELA_metOrExc)) * 100
data5$mathMetOrExc = as.numeric(as.character(data5$mathMetOrExc)) * 100
data5$props = data5$hpct + data5$aapct
data5$dummy = ifelse(data5$Network == 'Charter', 1, 0)
data6$aapct = as.numeric(as.character(data6$aapct))
data6$hpct = as.numeric(as.character(data6$hpct))
data6$wpct = as.numeric(as.character(data6$wpct))
data6$Total = as.numeric(as.numeric(gsub(",", "", data6$Total)))
data6$ELA_metOrExc = as.numeric(as.character(data6$ELA_metOrExc)) * 100
data6$mathMetOrExc = as.numeric(as.character(data6$mathMetOrExc)) * 100
data6$props = data6$hpct + data6$aapct
data6$dummy = ifelse(data6$Network == 'Charter', 1, 0)
data7$aapct = as.numeric(as.character(data7$aapct))
data7$hpct = as.numeric(as.character(data7$hpct))
data7$wpct = as.numeric(as.character(data7$wpct))
data7$Total = as.numeric(as.numeric(gsub(",", "", data7$Total)))
data7$ELA_metOrExc = as.numeric(as.character(data7$ELA_metOrExc)) * 100
data7$mathMetOrExc = as.numeric(as.character(data7$mathMetOrExc)) * 100
data7$props = data7$hpct + data7$aapct
data7$dummy = ifelse(data7$Network == 'Charter', 1, 0)
data8$aapct = as.numeric(as.character(data8$aapct))
data8$hpct = as.numeric(as.character(data8$hpct))
data8$wpct = as.numeric(as.character(data8$wpct))
data8$Total = as.numeric(as.numeric(gsub(",", "", data8$Total)))
data8$ELA_metOrExc = as.numeric(as.character(data8$ELA_metOrExc)) * 100
data8$mathMetOrExc = as.numeric(as.character(data8$mathMetOrExc)) * 100
data8$props = data8$hpct + data8$aapct
data8$dummy = ifelse(data8$Network == 'Charter', 1, 0)
data$test = (data$mathMetOrExc+data$ELA_metOrExc)/2
data3$test = (data3$mathMetOrExc+data3$ELA_metOrExc)/2
data4$test = (data4$mathMetOrExc+data4$ELA_metOrExc)/2
data5$test = (data5$mathMetOrExc+data5$ELA_metOrExc)/2
data6$test = (data6$mathMetOrExc+data6$ELA_metOrExc)/2
data7$test = (data7$mathMetOrExc+data7$ELA_metOrExc)/2
data8$test = (data8$mathMetOrExc+data8$ELA_metOrExc)/2
charter = data[which(data$Network == 'Charter'),]
neigh = data[which(data$Network != 'Charter'),]
charter3 = data3[which(data3$Network == 'Charter'),]
neigh3 = data3[which(data3$Network != 'Charter'),]
charter4 = data4[which(data4$Network == 'Charter'),]
neigh4 = data4[which(data4$Network != 'Charter'),]
charter5 = data5[which(data5$Network == 'Charter'),]
neigh5 = data5[which(data5$Network != 'Charter'),]
charter6 = data6[which(data6$Network == 'Charter'),]
neigh6 = data6[which(data6$Network != 'Charter'),]
charter7 = data7[which(data7$Network == 'Charter'),]
neigh7 = data7[which(data7$Network != 'Charter'),]
charter8 = data8[which(data8$Network == 'Charter'),]
neigh8 = data8[which(data8$Network != 'Charter'),]
mean(charter3[which(charter3$props >= 80),]$test)
mean(charter4[which(charter4$props >= 80),]$test)
mean(charter5[which(charter5$props >= 80),]$test)
mean(charter6[which(charter6$props >= 80),]$test)
mean(charter7[which(charter7$props >= 80),]$test)
mean(charter8[which(charter8$props >= 80),]$test)
sum(charter$Total)
sum(charter3$Total)
sum(charter8$Total)
sum(neigh$Total)
sum(neigh3$Total)
sum(neigh8$Total)
mean(charter[which(charter$props >= 80),]$test)
mean(charter3[which(charter3$props >= 80),]$test)
mean(charter4[which(charter4$props >= 80),]$test)
mean(charter5[which(charter5$props >= 80),]$test)
mean(charter6[which(charter6$props >= 80),]$test)
mean(charter7[which(charter7$props >= 80),]$test)
mean(charter8[which(charter8$props >= 80),]$test)
mean(charter[which(charter$props >= 80),]$test)
